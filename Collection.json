{
	"info": {
		"_postman_id": "670cb882-b73a-4953-94e5-30e8978b83e6",
		"name": "Sample copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Install Bdd For Postman",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"postman.setGlobalVariable('postmanBDD',responseBody);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://bigstickcarpet.com/postman-bdd/dist/postman-bdd.js",
					"protocol": "http",
					"host": [
						"bigstickcarpet",
						"com"
					],
					"path": [
						"postman-bdd",
						"dist",
						"postman-bdd.js"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate login functionality by providing valid credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d0e03b1-0bd1-4edf-8cb6-b281f58858fd",
						"exec": [
							"eval(postman.getGlobalVariable('postmanBDD'));",
							"",
							"describe('Verifying URL Status', function() {",
							"    it('should be 200', function() {",
							"       response.should.have.status(200);",
							"       response.body.should.have.property('token', \"QpwL5tke4Pnpja7X4\");",
							"      ",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}"
				},
				"url": {
					"raw": "{{URL}}/api/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate login functionality by providing invalid credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"Status code is 400\"] = responseCode.code === 400;",
							"tests[\"Please check your password\"] = data.error ===\"Missing password\";"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"email\": \"peter@klaven\"\r\n    \r\n}"
				},
				"url": {
					"raw": "{{URL}}/api/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate API service with invalid URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"eval(postman.getGlobalVariable('postmanBDD'));",
							"describe('Verifying URL Status', function() {",
							"    it('API is Invalid URL', function() {",
							"       response.should.have.status(404);",
							"      ",
							"      ",
							"    });",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{URL}}/ap",
					"host": [
						"{{URL}}"
					],
					"path": [
						"ap"
					]
				}
			},
			"response": []
		}
	]
}